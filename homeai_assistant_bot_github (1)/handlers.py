from aiogram import Dispatcher, types
import json

def register_handlers(dp: Dispatcher):
    @dp.message_handler(commands=["start"])
    async def start_handler(message: types.Message):
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø—Ä–æ–µ–∫—Ç–∞ HomeAI. –ü–∏—à–∏ /help –¥–ª—è –∫–æ–º–∞–Ω–¥.")

    @dp.message_handler(commands=["help"])
    async def help_handler(message: types.Message):
        await message.answer("/start ‚Äî –∑–∞–ø—É—Å–∫\n/status ‚Äî —Å—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞\n/idea ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–¥–µ—é\n/help ‚Äî –ø–æ–º–æ—â—å")

    @dp.message_handler(commands=["status"])
    async def status_handler(message: types.Message):
        with open("data/status.json", "r", encoding="utf-8") as f:
            status = json.load(f)
        reply = "\n".join([f"{'‚úîÔ∏è' if s['done'] else 'üîÑ'} {s['task']}" for s in status])
        await message.answer(f"üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞:\n{reply}")

    @dp.message_handler(commands=["idea"])
    async def idea_handler(message: types.Message):
        await message.answer("–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é –∏–¥–µ—é –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.")

    @dp.message_handler(lambda m: not m.text.startswith("/") and m.reply_to_message and "–∏–¥–µ—é" in m.reply_to_message.text.lower())
    async def save_idea(message: types.Message):
        with open("data/ideas.txt", "a", encoding="utf-8") as f:
            f.write(f"- {message.from_user.username or message.from_user.full_name}: {message.text}\n")
        await message.answer("–°–ø–∞—Å–∏–±–æ, –∏–¥–µ—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")